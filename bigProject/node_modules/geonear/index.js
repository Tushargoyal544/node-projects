const distance = exports.findDistance = (lat1, lon1, lat2, lon2)=>{
	if ((lat1 == lat2) && (lon1 == lon2)) {
		return 0
	}
	let radlat1 = Math.PI * lat1/180
	let radlat2 = Math.PI * lat2/180
	let theta = lon1-lon2
	let radtheta = Math.PI * theta/180
	let dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta)
	if (dist > 1) {
		dist = 1
	}
	dist = Math.acos(dist)
	dist = dist * 6370.69348565306
	return dist
}
//

//center: {lat, lon} of point to find distance from
//
//points: array of objects with {lat, lon}
exports.findXKmNearCoorsdinates = (center, points, x)=>{
  let nearByCoordinates = points.filter((point)=>{
    return distance(center.latitude, center.longitude, point.latitude, point.longitude) <= x
  })
  return nearByCoordinates
}
